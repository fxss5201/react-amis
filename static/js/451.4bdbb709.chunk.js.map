{"version":3,"file":"static/js/451.4bdbb709.chunk.js","mappings":"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","sources":["../node_modules/amis-ui/esm/components/Markdown.js","../node_modules/linkify-it/index.js","../node_modules/linkify-it/lib/re.js","../node_modules/markdown-it-html5-media/lib/index.js","../node_modules/markdown-it/index.js","../node_modules/markdown-it/lib/common/entities.js","../node_modules/markdown-it/lib/common/html_blocks.js","../node_modules/markdown-it/lib/common/html_re.js","../node_modules/markdown-it/lib/common/utils.js","../node_modules/markdown-it/lib/helpers/index.js","../node_modules/markdown-it/lib/helpers/parse_link_destination.js","../node_modules/markdown-it/lib/helpers/parse_link_label.js","../node_modules/markdown-it/lib/helpers/parse_link_title.js","../node_modules/markdown-it/lib/index.js","../node_modules/markdown-it/lib/parser_block.js","../node_modules/markdown-it/lib/parser_core.js","../node_modules/markdown-it/lib/parser_inline.js","../node_modules/markdown-it/lib/presets/commonmark.js","../node_modules/markdown-it/lib/presets/default.js","../node_modules/markdown-it/lib/presets/zero.js","../node_modules/markdown-it/lib/renderer.js","../node_modules/markdown-it/lib/ruler.js","../node_modules/markdown-it/lib/rules_block/blockquote.js","../node_modules/markdown-it/lib/rules_block/code.js","../node_modules/markdown-it/lib/rules_block/fence.js","../node_modules/markdown-it/lib/rules_block/heading.js","../node_modules/markdown-it/lib/rules_block/hr.js","../node_modules/markdown-it/lib/rules_block/html_block.js","../node_modules/markdown-it/lib/rules_block/lheading.js","../node_modules/markdown-it/lib/rules_block/list.js","../node_modules/markdown-it/lib/rules_block/paragraph.js","../node_modules/markdown-it/lib/rules_block/reference.js","../node_modules/markdown-it/lib/rules_block/state_block.js","../node_modules/markdown-it/lib/rules_block/table.js","../node_modules/markdown-it/lib/rules_core/block.js","../node_modules/markdown-it/lib/rules_core/inline.js","../node_modules/markdown-it/lib/rules_core/linkify.js","../node_modules/markdown-it/lib/rules_core/normalize.js","../node_modules/markdown-it/lib/rules_core/replacements.js","../node_modules/markdown-it/lib/rules_core/smartquotes.js","../node_modules/markdown-it/lib/rules_core/state_core.js","../node_modules/markdown-it/lib/rules_inline/autolink.js","../node_modules/markdown-it/lib/rules_inline/backticks.js","../node_modules/markdown-it/lib/rules_inline/balance_pairs.js","../node_modules/markdown-it/lib/rules_inline/emphasis.js","../node_modules/markdown-it/lib/rules_inline/entity.js","../node_modules/markdown-it/lib/rules_inline/escape.js","../node_modules/markdown-it/lib/rules_inline/html_inline.js","../node_modules/markdown-it/lib/rules_inline/image.js","../node_modules/markdown-it/lib/rules_inline/link.js","../node_modules/markdown-it/lib/rules_inline/newline.js","../node_modules/markdown-it/lib/rules_inline/state_inline.js","../node_modules/markdown-it/lib/rules_inline/strikethrough.js","../node_modules/markdown-it/lib/rules_inline/text.js","../node_modules/markdown-it/lib/rules_inline/text_collapse.js","../node_modules/markdown-it/lib/token.js","../node_modules/mdurl/decode.js","../node_modules/mdurl/encode.js","../node_modules/mdurl/format.js","../node_modules/mdurl/index.js","../node_modules/mdurl/parse.js","../node_modules/punycode/punycode.es6.js","../node_modules/uc.micro/categories/Cc/regex.js","../node_modules/uc.micro/categories/Cf/regex.js","../node_modules/uc.micro/categories/P/regex.js","../node_modules/uc.micro/categories/Z/regex.js","../node_modules/uc.micro/index.js","../node_modules/uc.micro/properties/Any/regex.js","../node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js"],"sourcesContent":["/**\n * amis-ui v2.7.3-beta.0\n * Copyright 2018-2023 fex\n */\n\nimport { __extends, __awaiter, __generator } from 'tslib';\nimport React__default from 'react';\nimport markdownIt from 'markdown-it';\nimport { html5Media } from 'markdown-it-html5-media';\n\nvar doMarkdown = markdownIt();\ndoMarkdown.use(html5Media);\nfunction markdown(content, options) {\n    if (options) {\n        doMarkdown.set(options);\n    }\n    return doMarkdown.render(content);\n}\nvar Markdown = /** @class */ (function (_super) {\n    __extends(Markdown, _super);\n    function Markdown(props) {\n        var _this = _super.call(this, props) || this;\n        _this.htmlRef = _this.htmlRef.bind(_this);\n        return _this;\n    }\n    Markdown.prototype.htmlRef = function (dom) {\n        this.dom = dom;\n        if (!dom) {\n            return;\n        }\n        this._render();\n    };\n    Markdown.prototype.componentDidUpdate = function (nextProps) {\n        if (this.props.content !== nextProps.content) {\n            this._render();\n        }\n    };\n    Markdown.prototype._render = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, content, options;\n            return __generator(this, function (_b) {\n                _a = this.props, content = _a.content, options = _a.options;\n                this.dom.innerHTML = markdown(content, options);\n                return [2 /*return*/];\n            });\n        });\n    };\n    Markdown.prototype.render = function () {\n        return (React__default.createElement(\"div\", { \"data-testid\": \"markdown-body\", className: \"markdown-body\", ref: this.htmlRef }));\n    };\n    Markdown.defaultProps = {\n        content: '',\n        options: {\n            linkify: true\n        }\n    };\n    return Markdown;\n}(React__default.Component));\n\nexport { Markdown as default, markdown };\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          ',(?!' + re.src_ZCc + ').|' +       // allow `,,,` in paths\n          ';(?!' + re.src_ZCc + ').|' +       // allow `;` if not followed by space-like char\n          '\\\\!+(?!' + re.src_ZCc + '|[!]).|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","'use strict';\n/* eslint complexity: \"off\" */\n\n\n/**\n * A minimalist `markdown-it` plugin for parsing video/audio references inside\n * markdown image syntax as `<video>` / `<audio>` tags.\n *\n * @namespace HTML5Media\n */\n\n// We can only detect video/audio files from the extension in the URL.\n// We ignore MP1 and MP2 (not in active use) and default to video for ambiguous\n// extensions (MPG, MP4)\nconst validAudioExtensions = ['aac', 'm4a', 'mp3', 'oga', 'ogg', 'wav'];\nconst validVideoExtensions = ['mp4', 'm4v', 'ogv', 'webm', 'mpg', 'mpeg'];\n\n/**\n * @property {Object} messages\n * @property {Object} messages.languageCode\n *  a set of messages identified with a language code, typically an ISO639 code\n * @property {String} messages.languageCode.messageKey\n *  an individual translation of a message to that language, identified with a\n *  message key\n * @typedef {Object} MessagesObj\n */\nlet messages = {\n  en: {\n    'html5 video not supported': 'Your browser does not support playing HTML5 video.',\n    'html5 audio not supported': 'Your browser does not support playing HTML5 audio.',\n    'html5 media fallback link': 'You can <a href=\"%s\" download>download the file</a> instead.',\n    'html5 media description': 'Here is a description of the content: %s'\n  }\n};\n\n/**\n * You can override this function using options.translateFn.\n *\n * @param {String} language\n *  a language code, typically an ISO 639-[1-3] code.\n * @param {String} messageKey\n *  an identifier for the message, typically a short descriptive text\n * @param {String[]} messageParams\n *  Strings to be substituted into the message using some pattern, e.g., %s or\n *  %1$s, %2$s. By default we only use a simple %s pattern.\n * @returns {String}\n *  the translation to use\n * @memberof HTML5Media\n */\nlet translate = function(language, messageKey, messageParams) {\n\n  // Revert back to English default if no message object, or no translation\n  // for this language\n  if (!messages[language] || !messages[language][messageKey])\n    language = 'en';\n\n  if (!messages[language])\n    return '';\n\n  let message = messages[language][messageKey] || '';\n\n  if (messageParams)\n    for (let param of messageParams)\n      message = message.replace('%s', param);\n\n  return message;\n};\n\n\n/**\n * A fork of the built-in image tokenizer which guesses video/audio files based\n * on their extension, and tokenizes them accordingly.\n *\n * @param {Object} state\n *  Markdown-It state\n * @param {Boolean} silent\n *  if true, only validate, don't tokenize\n * @param {MarkdownIt} md\n *  instance of Markdown-It used for utility functions\n * @returns {Boolean}\n * @memberof HTML5Media\n */\nfunction tokenizeImagesAndMedia(state, silent, md) {\n  let attrs, code, content, label, labelEnd, labelStart, pos, ref, res, title,\n    token, tokens, start;\n  let href = '',\n    oldPos = state.pos,\n    max = state.posMax;\n\n  // Exclamation mark followed by open square bracket - ![ - otherwise abort\n  if (state.src.charCodeAt(state.pos) !== 0x21 ||\n    state.src.charCodeAt(state.pos + 1) !== 0x5B)\n    return false;\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // Parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0)\n    return false;\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28) { // Parenthesis: (\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!md.utils.isSpace(code) && code !== 0x0A) // LF \\n\n        break;\n    }\n    if (pos >= max)\n      return false;\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!md.utils.isSpace(code) && code !== 0x0A)\n        break;\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!md.utils.isSpace(code) && code !== 0x0A)\n          break;\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29) { // Parenthesis: )\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined')\n      return false;\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B) { // Bracket: [\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label)\n      label = state.src.slice(labelStart, labelEnd);\n\n    ref = state.env.references[md.utils.normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n\n  if (silent)\n    return true;\n\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  content = state.src.slice(labelStart, labelEnd);\n\n  state.md.inline.parse(\n    content,\n    state.md,\n    state.env,\n    tokens = []\n  );\n\n  const mediaType = guessMediaType(href);\n  const tag = mediaType == 'image' ? 'img' : mediaType;\n\n  token = state.push(mediaType, tag, 0);\n  token.attrs = attrs = [\n    ['src', href]\n  ];\n  if (mediaType == 'image')\n    attrs.push(['alt', '']);\n  token.children = tokens;\n  token.content = content;\n\n  if (title)\n    attrs.push(['title', title]);\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n\n}\n\n\n/**\n * Guess the media type represented by a URL based on the file extension,\n * if any\n *\n * @param {String} url\n *  any valid URL\n * @returns {String}\n *  a type identifier: 'image' (default for all unrecognized URLs), 'audio'\n *  or 'video'\n * @memberof HTML5Media\n */\nfunction guessMediaType(url) {\n  const extensionMatch = url.match(/\\.([^/.]+)$/);\n  if (extensionMatch === null)\n    return 'image';\n  const extension = extensionMatch[1];\n  if (validAudioExtensions.indexOf(extension.toLowerCase()) != -1)\n    return 'audio';\n  else if (validVideoExtensions.indexOf(extension.toLowerCase()) != -1)\n    return 'video';\n  else\n    return 'image';\n}\n\n\n/**\n * Render tokens of the video/audio type to HTML5 tags\n *\n * @param {Object} tokens\n *  token stream\n * @param {Number} idx\n *  which token are we rendering\n * @param {Object} options\n *  Markdown-It options, including this plugin's settings\n * @param {Object} env\n *  Markdown-It environment, potentially including language setting\n * @param {MarkdownIt} md\n *  instance used for utilities access\n * @returns {String}\n *  rendered token\n * @memberof HTML5Media\n */\nfunction renderMedia(tokens, idx, options, env, md) {\n  const token = tokens[idx];\n  const type = token.type;\n  if (type !== 'video' && type !== 'audio')\n    return '';\n  let attrs = options.html5Media[`${type}Attrs`].trim();\n  if (attrs)\n    attrs = ' ' + attrs;\n\n  // We'll always have a URL for non-image media: they are detected by URL\n  const url = token.attrs[token.attrIndex('src')][1];\n\n  // Title is set like this: ![descriptive text](video.mp4 \"title\")\n  const title = token.attrIndex('title') != -1 ?\n    ` title=\"${md.utils.escapeHtml(token.attrs[token.attrIndex('title')][1])}\"` :\n    '';\n\n  const fallbackText =\n    translate(env.language, `html5 ${type} not supported`) + '\\n' +\n    translate(env.language, 'html5 media fallback link', [url]);\n\n  const description = token.content ?\n    '\\n' + translate(env.language, 'html5 media description', [md.utils.escapeHtml(token.content)]) :\n    '';\n\n  return `<${type} src=\"${url}\"${title}${attrs}>\\n` +\n    `${fallbackText}${description}\\n` +\n    `</${type}>`;\n}\n\n\n/**\n * The main plugin function, exported as module.exports\n *\n * @param {MarkdownIt} md\n *  instance, automatically passed by md.use\n * @param {Object} [options]\n *  configuration\n * @param {String} [options.videoAttrs='controls class=\"html5-video-player\"']\n *  attributes to include inside `<video>` tags\n * @param {String} [options.audioAttrs='controls class=\"html5-audio-player\"']\n *  attributes to include inside `<audio>` tags\n * @param {MessagesObj} [options.messages=built-in messages]\n *  human-readable text that is part of the output\n * @memberof HTML5Media\n */\nfunction html5Media(md, options = {}) {\n  if (options.messages)\n    messages = options.messages;\n  if (options.translateFn)\n    translate = options.translateFn;\n\n  const videoAttrs = options.videoAttrs !== undefined ?\n    options.videoAttrs :\n    'controls class=\"html5-video-player\"';\n  const audioAttrs = options.audioAttrs !== undefined ?\n    options.audioAttrs :\n    'controls class=\"html5-audio-player\"';\n\n  md.inline.ruler.at('image', (tokens, silent) => tokenizeImagesAndMedia(tokens, silent, md));\n\n  md.renderer.rules.video = md.renderer.rules.audio =\n    (tokens, idx, opt, env) => {\n      opt.html5Media = {\n        videoAttrs,\n        audioAttrs\n      };\n      return renderMedia(tokens, idx, opt, env, md);\n    };\n}\n\nmodule.exports = {\n  html5Media,\n  messages, // For partial customization of messages\n  guessMediaType\n};\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nmodule.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["doMarkdown","markdownIt","markdown","content","options","set","render","use","html5Media","Markdown","_super","props","_this","call","this","htmlRef","bind","__extends","prototype","dom","_render","componentDidUpdate","nextProps","__awaiter","_a","__generator","_b","innerHTML","React__default","className","ref","defaultProps","linkify","assign","obj","Array","slice","arguments","forEach","source","Object","keys","key","_class","toString","isFunction","escapeRE","str","replace","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","text","pos","self","tail","re","http","RegExp","src_auth","src_host_port_strict","src_path","test","match","length","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_2ch_src_re","tlds_default","split","compile","require","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","push","src_xn","join","email_fuzzy","tpl_email_fuzzy","link_fuzzy","tpl_link_fuzzy","link_no_ip_fuzzy","tpl_link_no_ip_fuzzy","host_fuzzy_test","tpl_host_fuzzy_test","aliases","schemaError","name","val","Error","__compiled__","__schemas__","compiled","link","isRegExp","createValidator","normalize","isString","alias","slist","filter","map","schema_test","src_ZPCc","schema_search","pretest","__index__","__text_cache__","resetScanCache","Match","shift","start","end","__last_index__","schema","__schema__","toLowerCase","index","lastIndex","raw","url","createMatch","LinkifyIt","schemas","reduce","acc","k","hasOwnProperty","add","definition","m","ml","me","len","next","tld_pos","exec","testSchemaAt","search","indexOf","result","list","keepOld","isArray","concat","sort","el","idx","arr","reverse","module","exports","opts","src_Any","src_Cc","src_Z","src_P","src_ZCc","text_separators","src_pseudo_letter","src_ip4","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","_createForOfIteratorHelper","validAudioExtensions","validVideoExtensions","messages","en","translate","language","messageKey","messageParams","message","_step","_iterator","s","n","done","param","value","err","e","f","guessMediaType","extensionMatch","extension","md","undefined","translateFn","videoAttrs","audioAttrs","inline","ruler","at","tokens","silent","state","attrs","code","label","labelEnd","labelStart","res","title","token","href","oldPos","max","posMax","src","charCodeAt","helpers","parseLinkLabel","utils","isSpace","parseLinkDestination","ok","normalizeLink","validateLink","parseLinkTitle","env","references","normalizeReference","parse","mediaType","tag","children","tokenizeImagesAndMedia","renderer","rules","video","audio","opt","type","trim","attrIndex","escapeHtml","fallbackText","description","renderMedia","open_tag","close_tag","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","_hasOwnProperty","has","object","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","String","fromCharCode","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","DIGITAL_ENTITY_TEST_RE","entities","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","ch","REGEXP_ESCAPE_RE","UNICODE_PUNCT_RE","lib","mdurl","ucmicro","TypeError","unescapeMd","unescapeAll","escaped","entity","parseInt","replaceEntityPattern","arrayReplaceAt","newElements","isWhiteSpace","isMdAsciiPunct","isPunctChar","toUpperCase","level","lines","disableNested","found","marker","prevPos","skipToken","Renderer","ParserCore","ParserBlock","ParserInline","punycode","config","default","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","RECODE_HOSTNAME_FOR","parsed","hostname","protocol","toASCII","er","encode","format","normalizeLinkText","toUnicode","decode","defaultChars","MarkdownIt","presetName","block","core","configure","presets","components","enableOnly","rules2","ruler2","enable","ignoreInvalid","chain","missed","disable","plugin","args","apply","State","process","parseInline","inlineMode","renderInline","Ruler","_rules","i","alt","tokenize","startLine","endLine","getRules","line","hasEmptyLines","maxNesting","skipEmptyLines","sCount","blkIndent","tight","isEmpty","outTokens","lineMax","Core","l","_rules2","cache","pending","pushPending","html","xhtmlOut","breaks","langPrefix","typographer","quotes","highlight","default_rules","code_inline","slf","renderAttrs","code_block","fence","highlighted","tmpAttrs","tmpToken","info","langName","langAttrs","image","renderInlineAsText","renderToken","hardbreak","softbreak","html_block","html_inline","nextToken","needLf","hidden","nesting","__rules__","__cache__","__find__","__compile__","chains","rule","enabled","altName","fn","before","beforeName","ruleName","splice","after","afterName","chainName","adjustTab","initial","lastLineEmpty","nextLine","offset","oldBMarks","oldBSCount","oldIndent","oldParentType","oldSCount","oldTShift","spaceAfterMarker","terminate","terminatorRules","isOutdented","oldLineMax","bMarks","tShift","eMarks","bsCount","parentType","markup","last","getLines","params","mem","haveEndMarker","skipChars","skipSpaces","tmp","skipSpacesBack","skipCharsBack","cnt","block_names","HTML_SEQUENCES","lineText","skipBulletListMarker","skipOrderedListMarker","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","listIndent","Number","Math","min","markTightParagraphs","_endLine","destEndPos","destEndLineNo","Token","StateBlock","indent_found","ddIndent","from","begin","keepLastLF","lineIndent","first","queue","lineStart","getLine","substr","escapedSplit","isEscaped","lastPos","current","substring","columns","columnCount","aligns","t","tableLines","tbodyLines","firstCh","secondCh","pop","tok","isLinkClose","j","currentToken","nodes","ln","htmlLinkLevel","fullUrl","urlText","links","blockTokens","NEWLINES_RE","NULL_RE","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","p","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","QUOTE_TEST_RE","QUOTE_RE","APOSTROPHE","replaceAt","process_inlines","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","single","StateCore","EMAIL_RE","AUTOLINK_RE","matchStart","matchEnd","openerLength","closerLength","backticksScanned","backticks","processDelimiters","delimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","headerIdx","lastTokenIdx","jumps","close","open","curr","tokens_meta","postProcess","startDelim","endDelim","isStrong","scanned","scanDelims","can_open","can_close","DIGITAL_RE","NAMED_RE","ESCAPED","lc","isLetter","parseReference","pmax","ws","StateInline","pendingLevel","_prev_delimiters","token_meta","canSplitWord","count","left_flanking","right_flanking","loneMarkers","isTerminatorChar","meta","attrPush","attrData","attrSet","attrGet","attrJoin","decodeCache","string","exclude","getDecodeCache","seq","b1","b2","b3","b4","chr","componentChars","encodeCache","keepEscaped","nextCode","getEncodeCache","encodeURIComponent","slashes","auth","port","pathname","hash","Url","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","slashesDenoteHost","lowerProto","hec","rest","simplePath","proto","atSign","hostEnd","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","unshift","qm","u","maxInt","base","regexPunycode","regexNonASCII","regexSeparators","errors","floor","stringFromCharCode","error","RangeError","mapDomain","domain","callback","parts","encoded","array","ucs2decode","output","counter","extra","ucs2encode","codePoints","_toConsumableArray","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","input","codePoint","inputLength","bias","basic","oldi","w","baseMinusT","out","currentValue","basicLength","handledCPCount","_step2","_iterator2","handledCPCountPlusOne","_step3","_iterator3","q","qMinusT","Any","Cc","Cf","P","Z","unsupportedIterableToArray","o","allowArrayLike","it","Symbol","iterator","F","_e","normalCompletion","didErr","step","_e2","__esModule"],"sourceRoot":""}